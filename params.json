{"name":"PAWN Boilerplate","body":"# PAWN Boilerplate\r\n\r\nPlease note that this project is not yet officially released.\r\n\r\nPAWN Boilerplate, or PBP, is a solid base for rapidly developing large gamemodes for SA-MP servers.\r\nEverything is organized into modules, which are very easy to create and get started with.\r\n\r\nTo make this work, a pre-compiler has been created. The pre-compiler will automatically generate a main file linked to all the modules and their contents.\r\n\r\nHave a look at the **[Wiki](https://github.com/oscar-broman/PAWN-Boilerplate/wiki)** for more information.\r\n\r\n# Cool features\r\n\r\n## Scripting made easy\r\n\r\nPBP contains many mature, well-tested libraries and plugins, which are used extensively throughout the system.\r\n\r\n### Libraries bundled\r\n\r\n* **YSI** by Y_Less\r\n* **fixes.inc** by Y_Less\r\n* **amx_assembly** by Zeex\r\n* **formatex** by Slice\r\n* **pointers.inc** by Slice\r\n* **SQLite Improved** by Slice\r\n\r\n### Plugins bundled\r\n\r\n* **sscanf** by Y_Less\r\n* **whirlpool** by Y_Less\r\n* **crashdetect** by Zeex\r\n\r\n## Commands\r\n\r\nPBP uses YCMD, though with some extensions:\r\n\r\n```C++\r\n// This will appear in /commands\r\nCommandDescription<quit_race> = \"Quit the race you're currently in.\";\r\n\r\n// Create the racers group (where you create global variables)\r\nnew StaticGroup<GROUP_RACERS> = \"Racers\";\r\n\r\n// This command is only available for players in the group GROUP_RACERS\r\nYCMD(GROUP_RACERS):quit_race(playerid, params[], help) {\r\n\t// <quit race code here>\r\n}\r\n```\r\n\r\n## Configuration variables\r\n\r\nVery easily make variables save/load with the gamemode.\r\n\r\n```C++\r\nnew g_SomeVariable = 50; // 50 will be the default value\r\nnew g_SomeArray[20];\r\n\r\n// These variables now automatically loads and saves when the gamemode inits/exits\r\nRegisterConfigVariable: g_SomeVariable;\r\nRegisterConfigArray: g_SomeArray;\r\n```\r\n\r\nConfig values can be changed while the server is running with the following RCON commands:\r\n\r\n* Reload all config data from `scriptfiles/config.cfg`: `/rcon config_reload`\r\n* Change the value of a specific config variable: `/rcon config_set g_SomeVariable 123`\r\n\r\n## User module\r\n\r\nSeamlessly integrates with the rest of your gamemode. Automatically loaded/saved user variables:\r\n\r\n*Auto-magically!*\r\n\r\nHere's how would keep in track how many times a player has logged in:\r\n\r\n```C++\r\nnew g_NumTimesConnected[MAX_PLAYERS];\r\n\r\nRegisterUserVariable: g_NumTimesConnected;\r\n\r\n// OnPlayerLogIn\r\ng_NumTimesConnected[playerid]++;\r\n\r\nSendClientMessage(playerid, COLOR_GENERIC_INFO, \"* Welcome. You have logged in %d times.\", g_NumTimesConnected[playerid]);\r\n\r\n// ..that's it!\r\n```\r\n\r\n## Text module\r\n\r\n### formatex integration\r\n\r\nThe Text module adds formatex to many native text functions.\r\n\r\nExamples of what now can be done:\r\n\r\n```C++\r\nnew dogs = 2, cats = 3, name[] = \"John Doe\";\r\n\r\nSendClientMessage(playerid, color, \"You have %d dogs and %d cats. Your name is %s.\", dogs, cats, name);\r\n// Output: You have 2 dogs and 3 cats. Your name is John Doe.\r\n\r\nnew weapon = GetPlayerWeapon(playerid), modelid = GetVehicleModel(GetPlayerVehicleID(playerid));\r\nSendClientMessage(playerid, color, \"You're currently holding %w and driving a vehicle called %v.\", weapon, modelid);\r\n// Output: You're currently holding an m4 and driving a vehicle called Infernus.\r\n\r\n// OnPlayerDeath:\r\nSendClientMessage(playerid, color, \"You were killed by %p using %w.\", killerid, reason);\r\n// Output: You were killed by [ABC]SomeGuy using a minigun.\r\n```\r\n\r\n### Translations\r\n\r\nThe Text module also brings an **amazing** system for translating text. All you need to do is use an at-sign before strings (`@\"my string\"`) and create files in `scriptfiles/languages/XX.lang.inc`.\r\n\r\n#### Example\r\n\r\n**Your code:**\r\n\r\n```Objective-C\r\n// OnPlayerConnect:\r\nSendClientMessage(playerid, color, @\"Welcome to the server!\");\r\nSendClientMessageToAll(color, @\"%p just joined the server!\", playerid);\r\n```\r\n\r\n**The file `scriptfiles/languages/sv.lang.inc`:**\r\n\r\nWhen you create this file and run the compile script, it will now look like this:\r\n\r\n```C++\r\n\"Welcome to the server!\" = \"Welcome to the server!\"\r\n\r\n\"%p just joined the server!\" = \"%p just joined the server!\"\r\n```\r\n\r\nNow, simply change the **right part** of the assignment, such as this:\r\n\r\n```C++\r\n\"Welcome to the server!\" = \"Välkommen till servern!\"\r\n\r\n\"%p just joined the server!\" = \"%p anslöt nyss till servern!\"\r\n```\r\n\r\nIf a player has his language set to Swedish, then he will see `Välkommen till servern!` when that client message is sent.\r\nAs for everyone else, depending on their language they will see either `Slice just joined the server!` or `Slice anslöt nyss till servern!`.\r\n\r\nAs always, *auto-magically!*","tagline":"Solid ground for a big SA-MP server script.","google":"UA-32784085-1","note":"Don't delete this file! It's used internally to help with page regeneration."}